let
    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText("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", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type text) meta [Serialized.Text = true]) in type table [Column1 = _t]),
#"Split Column by Delimiter" = Table.SplitColumn(Source, "Column1", Splitter.SplitTextByEachDelimiter({"<img src="""}, QuoteStyle.None, false), {"Column1.1", "Column1.2"}),
    #"Removed Columns" = Table.RemoveColumns(#"Split Column by Delimiter",{"Column1.1"}),
    #"Split Column by Delimiter1" = Table.SplitColumn(#"Removed Columns", "Column1.2", Splitter.SplitTextByEachDelimiter({"<img src="""}, QuoteStyle.None, false), {"Column1.2.1", "Column1.2.2"}),
    #"Split Column by Delimiter2" = Table.SplitColumn(#"Split Column by Delimiter1", "Column1.2.2", Splitter.SplitTextByEachDelimiter({"<img src="""}, QuoteStyle.None, false), {"Column1.2.2.1", "Column1.2.2.2"}),
    #"Split Column by Delimiter3" = Table.SplitColumn(#"Split Column by Delimiter2", "Column1.2.2.2", Splitter.SplitTextByDelimiter("<img src=""", QuoteStyle.None), {"Column1.2.2.2.1", "Column1.2.2.2.2"}),
    #"Split Column by Delimiter4" = Table.SplitColumn(#"Split Column by Delimiter3", "Column1.2.1", Splitter.SplitTextByEachDelimiter({""" /></div><div class=""speaker-name"" data-mh=""miniature-speaker""><p>"}, QuoteStyle.None, false), {"Column1.2.1.1", "Column1.2.1.2"}),
    #"Split Column by Delimiter6" = Table.SplitColumn(#"Split Column by Delimiter4", "Column1.2.2.1", Splitter.SplitTextByDelimiter(""" /></div><div class=""speaker-name"" data-mh=""miniature-speaker""><p>", QuoteStyle.None), {"Column1.2.2.1.1", "Column1.2.2.1.2"}),
    #"Split Column by Delimiter5" = Table.SplitColumn(#"Split Column by Delimiter6", "Column1.2.2.2.1", Splitter.SplitTextByEachDelimiter({""" /></div><div class=""speaker-name"" data-mh=""miniature-speaker""><p>"}, QuoteStyle.None, false), {"Column1.2.2.2.1.1", "Column1.2.2.2.1.2"}),
    #"Split Column by Delimiter7" = Table.SplitColumn(#"Split Column by Delimiter5", "Column1.2.2.2.2", Splitter.SplitTextByEachDelimiter({""" /></div><div class=""speaker-name"" data-mh=""miniature-speaker""><p>"}, QuoteStyle.None, false), {"Column1.2.2.2.2.1", "Column1.2.2.2.2.2"}),
    #"Split Column by Delimiter8" = Table.SplitColumn(#"Split Column by Delimiter7", "Column1.2.1.2", Splitter.SplitTextByEachDelimiter({"</p>"}, QuoteStyle.Csv, false), {"Column1.2.1.2.1", "Column1.2.1.2.2"}),
    #"Split Column by Delimiter9" = Table.SplitColumn(#"Split Column by Delimiter8", "Column1.2.2.1.2", Splitter.SplitTextByEachDelimiter({"</p>"}, QuoteStyle.Csv, false), {"Column1.2.2.1.2.1", "Column1.2.2.1.2.2"}),
    #"Split Column by Delimiter10" = Table.SplitColumn(#"Split Column by Delimiter9", "Column1.2.2.2.1.2", Splitter.SplitTextByEachDelimiter({"</p>"}, QuoteStyle.Csv, false), {"Column1.2.2.2.1.2.1", "Column1.2.2.2.1.2.2"}),
    #"Split Column by Delimiter11" = Table.SplitColumn(#"Split Column by Delimiter10", "Column1.2.2.2.2.2", Splitter.SplitTextByEachDelimiter({"</p>"}, QuoteStyle.Csv, false), {"Column1.2.2.2.2.2.1", "Column1.2.2.2.2.2.2"}),
    #"Removed Columns1" = Table.RemoveColumns(#"Split Column by Delimiter11",{"Column1.2.1.2.2", "Column1.2.2.1.2.2", "Column1.2.2.2.1.2.2", "Column1.2.2.2.2.2.2"}),
    #"Renamed Columns" = Table.RenameColumns(#"Removed Columns1",{{"Column1.2.1.1", "Speaker1URL"}, {"Column1.2.1.2.1", "Speaker1"}, {"Column1.2.2.1.1", "Speaker2URL"}, {"Column1.2.2.1.2.1", "Speaker2"}, {"Column1.2.2.2.1.1", "Speaker3URL"}, {"Column1.2.2.2.1.2.1", "Speaker3"}, {"Column1.2.2.2.2.1", "Speaker4URL"}, {"Column1.2.2.2.2.2.1", "Speaker4"}}),
    #"Added Custom" = Table.AddColumn(#"Renamed Columns", "Speakers", each if [Speaker4]=null and [Speaker3]= null and [Speaker2]=null then [Speaker1] else 
if [Speaker4]=null and [Speaker3]= null then [Speaker1]&", "&[Speaker2] else
if [Speaker4]=null  then [Speaker1]&", "&[Speaker2]&", "&[Speaker3] else 
[Speaker1]&", "&[Speaker2]&", "& [Speaker3]&", "&[Speaker4])
in
    #"Added Custom"